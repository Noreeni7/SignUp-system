<?php
// ================================ HANDLES SECURE SESSION SETUP AND ID REGENERATION ============================

// --- Secure session configuration ---

// Store the session ID only in cookies (not in the URL).
// This helps prevent session hijacking attacks where someone could steal your session ID from a link.
ini_set('session.use_only_cookies',1);

// Enable strict mode for sessions.
// This prevents PHP from accepting any session ID that was not generated by the server,
// protecting against session fixation attacks.
ini_set('session.use_strict_mode',1);

// --- Set session cookie settings for better security and control ---
session_set_cookie_params([
    'lifetime' => 1800,
    'domain' => 'localhost',
    'path' => '/',
    'secure' => true,
    // Helps protect against JavaScript attacks (like XSS).
    // It means JavaScript cannot read or change the session cookie.
    'httponly' => true
]);

// A session allows the website to remember the logged-in user across pages.
session_start();


// --- Check if it's time to regenerate the session ID ---
// Regenerating the session ID helps prevent hackers from stealing it
// and pretending to be the user (this is called session fixation).
if (!isset($_SESSION["last_regeneration"])) {
    // If this is the first time we are checking, regenerate immediately.
    regenerate_session_id();
} else {
    // Set the time interval for regeneration.
    // 60 * 30 = 1800 seconds = 30 minutes.
    $interval = 60 * 30;

    // Check how long it's been since the last regeneration.
    // time() gives the current time in seconds.
    // If 30 minutes have passed, regenerate the session ID again.
    if (time() - $_SESSION["last_regeneration"] >= $interval) {
        regenerate_session_id();
    }
}

// --- Function to regenerate the session ID safely ---
function regenerate_session_id() {
    // Create a new session ID and delete the old one.
    // This helps keep your session secure (prevents stealing or reuse of old IDs).
    session_regenerate_id();

    // Store the current time so we know when we last regenerated.
    $_SESSION["last_regeneration"] = time();
}
